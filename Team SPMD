import os
import requests
from git import Repo  # Requires `gitpython`. Install with `pip install gitpython`.
88888 DELET THIS PART 
# Replace these with your details
GITHUB_TOKEN = "your_personal_access_token"
GITHUB_USERNAME = "your_github_username"
REPO_NAME = "new-repository-name"
DESCRIPTION = "Description for your new repository"
PRIVATE = False  # Set to True to make the repository private

# Create a new repository on Git
def create_repository():
    url = "https://api.github.com/user/repos"
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json",
    }
    payload = {
        "name": REPO_NAME,
        "description": DESCRIPTION,
        "private": PRIVATE,
    }

    response = requests.post(url, json=payload, headers=headers)

    if response.status_code == 201:
        print(f"Repository '{REPO_NAME}' created successfully!")
        repo_url = response.json()["html_url"]
        print(f"Repository URL: {repo_url}")
        return response.json()["clone_url"]
    else:
        print("Failed to create repository")
        print(f"Status Code: {response.status_code}")
        print(response.json())
        return None

# Clone the repository locally
def clone_repository(clone_url, local_dir):
    try:
        print(f"Cloning repository from {clone_url} into {local_dir}")
        Repo.clone_from(clone_url, local_dir)
        print("Repository cloned successfully!")
    except Exception as e:
        print(f"Failed to clone repository: {e}")

# Main function
if __name__ == "__main__":
    # Step 1: Create the repository on GitHub
    clone_url = create_repository()
    if clone_url:
        # Step 2: Clone the repository locally
        local_directory = os.path.join(os.getcwd(), REPO_NAME)
        clone_repository(clone_url, local_directory)
